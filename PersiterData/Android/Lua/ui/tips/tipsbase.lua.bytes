

CTipsBase ={}
CTipsBase.__index = CTipsBase

local margin
--CTipsBase.background

local function SortByName(a,b)
 	return String.Compare(a.name, b.name) < 0; 
end

local function UpdateSize(Label,Background,Margin)
	Label:MakePixelPerfect();
	
	-- set background
	local bgWidth = Label.width + (Margin.x + Margin.y);
	local bgHeight = Label.height + (Margin.z + Margin.w);
	Background.width = bgWidth
	Background.height = bgHeight
	
	-- label is LEFT-CENTER
	local pos = Label.gameObject.transform.localPosition;
	pos.x = Mathf.Round(-bgWidth / 2 + Margin.x);
	pos.y = Mathf.Round(bgHeight / 2 - Margin.z - Label.height / 2);
	Label.gameObject.transform.localPosition = pos;
end

local function GetTipsTextItemTbl(obj,Margin)
	local temp = {}
	temp.obj = obj
	temp.Margin = Margin
	temp.Label = GetLabel(obj,'Label');
	temp.Background = GetSprite(obj,'BackGround');
	temp.UpdateSize = function (self)
		UpdateSize(self.Label,self.Background,self.Margin)
	end
	return temp
end
--------
function CTipsBase:Init(obj)
	self.gameObject = obj
	self.transform = obj.transform
end

function CTipsBase:CreateBackground(bg)
	local go = GameObject.Instantiate(bg.gameObject);
	go:SetActive(true);

	go.transform:AttachTo(self.transform, true);
	
	local pos = go.transform.localPosition;
	pos.z = self.transform.localPosition.z + 1;
	go.transform.localPosition = pos;
	
	self.background = go:GetComponent('UISprite');
	self.background.width = bg.width;
	self.background.height = bg.height;
end

function CTipsBase:Reposition ()
	local myTrans = self.transform;
	
	local x = 0;
	local y = 0;
	
	local list = {}
	for i=0,myTrans.childCount-1 do
		local t = myTrans:GetChild(i);			
		if (t and t.gameObject.activeInHierarchy) then
			--t.gameObject:SendMessage("UpdateSize");--, SendMessageOptions.DontRequireReceiver
			list[#list+1]=t;
		end
	end
	self:UpdateSize()

	--table.sort(list,SortByName);
	for _,t in ipairs(list) do
		local tbg = t:Find("BackGround");			
		if (tbg) then
			local w = tbg:GetComponent('UIWidget');				
			if (w) then
				if (w.width > x) then
					x = w.width;
				end
				y = y + w.height;
			end
		end
	end
	
	x = x + (margin.x + margin.y);
	y = y +(margin.z + margin.w);
	
	x = math.max(x, 1);
	y = math.max(y, 1);
		
	if (self.background) then
		self.background.width = math.floor(x);
		self.background.height = math.floor(y);
	end
		
		local start_x = margin.x - x * 0.5;
		local start_y = - margin.z + y * 0.5;
		
	for i,t in ipairs(list) do	
		local depth = t.localPosition.z;			
		local tbg = t:Find("BackGround");
		
		if (tbg) then
			local w = tbg:GetComponent('UIWidget');				
			if (w) then
				local localx = w.width * 0.5;
				local localy = w.height * 0.5;
				t.localPosition = Vector3(math.floor(start_x + localx), math.floor(start_y - localy), depth);	
				start_y = start_y - w.height;				
			end
		end		
	end
end
	
function CTipsBase:OnItemChanged(obj)
	self:Reposition();
end

--virtual function
function CTipsBase:ClearItems()end
function CTipsBase:AddItem(ListItemPrefab,rectOffset)end
function CTipsBase:SetData(objs)end
function CTipsBase:UpdateSize()end
--------------------------------------------------------------------------
--具体实现部分
--------------------------------------------------------------------------
-------------------------------------
--TipsItemMiniPanel
-------------------------------------
TipsItemMiniPanel = {}
TipsItemMiniPanel.__index = TipsItemMiniPanel
setmetatable(TipsItemMiniPanel,CTipsBase)
function TipsItemMiniPanel.new(obj)
	local self = {}
	setmetatable(self, TipsItemMiniPanel)
	self:Init(obj)
	local manager = obj:GetComponent('PanelCtrlMgr')
	local ctrls = manager.vecCtrl
	local vecLbls = manager.vecLbls
	local vecSprites = manager.vecSprites
	self.texIcon = ctrls[0]:GetComponent('UITexture');
	self.lblNameItem= vecLbls[0]
	self.lblOwnCount= vecLbls[1]
	self.lblDesc= vecLbls[2]
	self.lblGetWay= vecLbls[3]
	self.sprQualityBorderItem= vecSprites[0]
	self.BgDesc= vecSprites[1]
	self.BgGetWay= vecSprites[2]
	margin = Vector4(2,2,2,2)
	return self
end

function TipsItemMiniPanel:SetData (objs)
	local itemEntry = objs[1];
	local itemTpl = Template.GetItemTemplate (itemEntry);

	if not (itemTpl)  then return end
	self.lblNameItem.text = itemTpl.name;
	self.lblNameItem.color = UIHelper.GetQualityColor(itemTpl.quality);

	
	self.lblDesc.text = itemTpl.desc;
	
	self.lblGetWay.text = itemTpl.getway;
	if(itemTpl.mainType == ItemMainTypes.Point) then
		if itemTpl.subType == PointTypes.Gold then
			self.lblOwnCount.text = g_Hero.gold 
		elseif itemTpl.subType == PointTypes.Diamond then
			self.lblOwnCount.text = g_Hero.diamond
		elseif itemTpl.subType == PointTypes.HonorCoin then
			self.lblOwnCount.text = g_Hero.honor	
		-- 添加活跃度拥有值显示
		elseif itemTpl.subType == PointTypes.ActivityPoint then
			self.lblOwnCount.text = g_QuestSystem:GetActivityPoint()
		elseif itemTpl.subType == PointTypes.TrainingPoint then
			self.lblOwnCount.text = g_Hero:GetCurrency(itemEntry)
		elseif itemTpl.subType == PointTypes.EnergyPoint then 
			self.lblOwnCount.text = g_Hero.dna > 100000 and string.format(GameMessage.MainMoney,g_Hero.dna/10000) or g_Hero.dna 
		elseif itemTpl.subType == PointTypes.PkPoint then
			self.lblOwnCount.text = g_Hero.prestige
		elseif itemTpl.subType == PointTypes.ClubCoin then 
			self.lblOwnCount.text = g_Hero.clubcoin
		elseif itemTpl.subType == PointTypes.WBPoint then
			self.lblOwnCount.text = g_Hero.killing
		end
	-- elseif (itemTpl.mainType == ItemMainTypes.Stamina) then
	-- 	self.lblOwnCount.text = Player.mainPlayer.staminaPoint.ToString();
	-- 添加经验拥有值显示
	elseif itemTpl.mainType == ItemMainTypes.PlayerExp then
		self.lblOwnCount.text = g_Hero:GetExp() - g_Hero:GetMaxExp()
	else
		self.lblOwnCount.text = g_bagMgr:GetItemCount(itemEntry)
		local itemNum = g_bagMgr:GetItemCount(itemEntry)
		if 0 == itemNum then
			itemNum = g_TeamGemBag:GetItemCount(itemEntry)
		end
		self.lblOwnCount.text = itemNum
	end

	self.texIcon.MainTexture = TextureEx (itemTpl.icon);
	if (self.sprQualityBorderItem) then
		if itemTpl.mainType == ItemMainTypes.Soul then
			self.sprQualityBorderItem.spriteName = UIHelper.GetSoulQualitySpriteName (itemTpl.quality);
		elseif(itemTpl.mainType == ItemMainTypes.EquipmentMaterial and itemTpl.subType == ItemSubTypes.EquipmentMaterialFragment) then
			self.sprQualityBorderItem.spriteName = UIHelper.GetFragmentQualitySpriteName(itemTpl.quality);	
		else
			self.sprQualityBorderItem.spriteName = UIHelper.GetQualitySpriteName(itemTpl.quality);	
		end
	end
end

function TipsItemMiniPanel:UpdateSize()
	UpdateSize(self.lblDesc,self.BgDesc,Vector4(20,20,5,5))
	UpdateSize(self.lblGetWay,self.BgGetWay,Vector4(20,20,5,5))
end

----------------------------------
--TipsCommonPanel
-----------------------------------
TipsCommonPanel = {}
TipsCommonPanel.__index = TipsCommonPanel
setmetatable(TipsCommonPanel,CTipsBase)
function TipsCommonPanel.new(obj)
	local self = {}
	setmetatable(self, TipsCommonPanel)
	self:Init(obj)
	margin = Vector4(0,0,0,0)
	self.itemList = {}
	return self
end

function TipsCommonPanel:AddItem(ListItemPrefab,rectOffset)
	local obj = GameObject.Instantiate(ListItemPrefab);
	obj.name = #self.itemList;
	obj.transform:AttachTo(self.gameObject.transform,true);
	local temp = GetTipsTextItemTbl(obj,rectOffset)--Vector4(5,5,5,5)
	self.itemList[#self.itemList+1]=temp;
	--self:Reposition ();
	return temp;
end
	
function TipsCommonPanel:ClearItems()
	for _,item in ipairs(self.itemList) do
		if item then
			GameObject.DestroyImmediate(item.obj);
		end
	end		
	self.itemList= {}	
end
function TipsCommonPanel:UpdateSize()
	for _,item in ipairs(self.itemList) do
		item:UpdateSize()
	end
end

----------------------------------
--TipsCreatureSpellPanel
-----------------------------------
TipsCreatureSpellPanel = {}
TipsCreatureSpellPanel.__index = TipsCreatureSpellPanel
setmetatable(TipsCreatureSpellPanel,CTipsBase)
function TipsCreatureSpellPanel.new(obj)
	local self = {}
	setmetatable(self, TipsCreatureSpellPanel)
	self:Init(obj)
	local ctrls = obj:GetComponent('PanelCtrlMgr').vecCtrl
	self.nameLabel = ctrls[0]:GetComponent('UILabel');
	self.descLabel= ctrls[1]:GetComponent('UILabel');
	self.curCDLabel= ctrls[2]:GetComponent('UILabel');
	self.textItemTbl = {}
	local temp = GetTipsTextItemTbl(ctrls[3],Vector4(20,20,5,5))
	self.textItemTbl[1] = temp
	temp = GetTipsTextItemTbl(ctrls[4],Vector4(20,20,5,5))
	self.textItemTbl[2] = temp
	margin = Vector4(0,0,0,0)
	return self
end

function TipsCreatureSpellPanel:UpdateSize()
	for i,v in ipairs(self.textItemTbl) do
		v:UpdateSize()
	end
end

function TipsCreatureSpellPanel:SetData (objs)
	if(#objs <= 0) then return end	
	local spell = objs[1];
	self.nameLabel.text = spell.spellName;
	self.curCDLabel.text = String.Format(GameMessage["ui_skill_cooldown_time_format"], spell.cooldown);
	self.descLabel.text = spell.GetDescription();	
end

----------------------------------
--TipsSkillInfo
-----------------------------------
TipsSkillPanel = {}
TipsSkillPanel.__index = TipsSkillPanel
setmetatable(TipsSkillPanel,CTipsBase)
function TipsSkillPanel.new(obj)
	local self = {}
	setmetatable(self, TipsSkillPanel)
	self:Init(obj)
	local ctrls = obj:GetComponent('PanelCtrlMgr').vecCtrl
	self.skillIcon = ctrls[0]:GetComponent('UITexture');
	self.currentTitleObject = ctrls[1]
	self.nextTitleObject = ctrls[2]
	self.nameLabel= ctrls[3]:GetComponent('UILabel');
	self.levelLabel= ctrls[4]:GetComponent('UILabel');
	self.descLabel= ctrls[5]:GetComponent('UILabel');
	self.nextLabel= ctrls[6]:GetComponent('UILabel');
	self.curCDLabel= ctrls[7]:GetComponent('UILabel');
	self.nextCDLabel= ctrls[8]:GetComponent('UILabel');
	self.textItemTbl = {}
	for i=1,6 do
		self.textItemTbl[i] = GetTipsTextItemTbl(ctrls[i+8],Vector4(20,20,5,5))
	end
	margin = Vector4(0,0,0,0)
	return self
end

function TipsSkillPanel:UpdateSize()
	for _,v in ipairs(self.textItemTbl) do
		v:UpdateSize()
	end
end

function TipsSkillPanel:SetData (objs)
	self.curCDLabel.gameObject:SetActive(false);
	self.nextCDLabel.gameObject:SetActive(false);
	local skillInfo = objs.config

	local function SplitKeyAndValue(str)
		local strTable = Split(str,';')
		local dataTable = {}
		for k,v in pairs(strTable) do
			table.insert(dataTable, Split(v,':'))
		end
		return dataTable
	end

	local function GetCalcSpellObj(level, str, values)
		local cmpSpell = self.curCDLabel.gameObject:AddComponent('CalcSpell');
		if cmpSpell == nil then return nil end

		cmpSpell.Level = level
		cmpSpell.description = str
		local descTable = SplitKeyAndValue(values)
		for k,v in pairs(descTable) do
			if v[1] and v[2] then
				cmpSpell:SetProperty(v[1],v[2])
			end
		end
		cmpSpell:SetOver()
		return cmpSpell
	end

	if(skillInfo) then
		self.skillIcon.MainTexture = TextureEx(skillInfo.iconPath);
		self.nameLabel.text = Template.GetSpellValue(skillInfo.name);
		self.levelLabel.text = GameMessage['LevelDesc'] .. objs.level;
		local desc,descValue = Template.GetSpellValue(skillInfo.desc)
		local calcSpellObj = GetCalcSpellObj(objs.level, desc, descValue)
		
		if calcSpellObj then
			if(objs.level > 0) then
				self.descLabel.text = calcSpellObj:GetDescription()
				if objs.isPassivity then
					self.levelLabel.text = ""
					self.nextLabel.text = ""
					self.nextTitleObject:SetActive(false)
				elseif(objs.level >= Template.GetWarriorMaxLv()) then
					self.nextLabel.text = Template.GetErrorString(12027);
				else
	                self.nextLabel.text = calcSpellObj:GetNextDescription()
				end
			else
				if objs.isPassivity then
					self.levelLabel.text = ""
					self.descLabel.text = calcSpellObj:GetDescription()
					self.nextLabel.text = string.format(GameMessage['PassiveSkillFetterLevel'], GameMessage['WarriorQuality'..objs.quality])
					self.nextTitleObject:SetActive(false)
				else
					self.descLabel.text = GameMessage["ui_skill_unactive"];
					self.nextLabel.text = calcSpellObj:GetNextDescription()
				end
	        end
	    end
	end
    self.currentTitleObject:SetActive(false)
end

----------------------------------
--TipsEquipPanel
-----------------------------------
TipsEquipPanel = {}
TipsEquipPanel.__index = TipsEquipPanel
setmetatable(TipsEquipPanel,CTipsBase)
function TipsEquipPanel.new(obj)
	local self = {}
	setmetatable(self, TipsEquipPanel)
	self:Init(obj)
	local manager = obj:GetComponent('PanelCtrlMgr')
	local ctrls = manager.vecCtrl
	local vecLbls = manager.vecLbls
	local vecSprites = manager.vecSprites

	self.nameLabel = vecLbls[0];
	self.lvLabel= vecLbls[1];
	self.baseLabel= vecLbls[2];--基础属性
	self.starLabel = GetLabel(obj,'LabelStar')
	self.TeamstarLabel = GetLabel(obj,'LabelStarTeamEquip')
	--self.TeamstarLabel = GetLabel(obj,'LabelStar1')
	self.icon = ctrls[0]:GetComponent('UITexture');
	self.quality = vecSprites[0];
	self.appendLabel= vecLbls[3]--附加属性
	self.suitLabel= vecLbls[4]--套装属性

	self.objBtnLeft = ctrls[1]
	self.btnLeft = self.objBtnLeft:GetComponent('UIButton')
	self.objBtnRight = ctrls[2]
	self.btnRight = self.objBtnRight:GetComponent('UIButton')
	self.btnLeftLabel = vecLbls[5]
	self.btnRightLabel = vecLbls[6]
	self.objBtnCenter = GetCtrl(obj,'BtnRecast')	
	self.btnCenter = self.objBtnCenter:GetComponent('UIButton')
	self.lblCenter = GetLabel(self.objBtnCenter,'Label')

	self.appendBg = vecSprites[1];
	self.suitBg = vecSprites[2];

	self.objBg = vecSprites[3]

	log("FindobjBg:" ..self.objBg.gameObject.name)
	self.objSuitPart = ctrls[3]
	self.objBtnPart = ctrls[4]
	self.suitLine = vecSprites[4]
	self.objEquiped = ctrls[5]

	self.objBtnRightTrigger = self.objBtnRight:GetComponent('UIEventLuaTrigger')
	self.objBtnLefTrigger = self.objBtnLeft:GetComponent('UIEventLuaTrigger')
	self.effectRight = ctrls[6]
	self.effectLeft = ctrls[7]

	margin = Vector4(0,0,0,0)
	return self
end

function TipsEquipPanel:UpdateSize()

	UpdateSize(self.appendLabel,self.appendBg,Vector4(50,100,30,30))
	UpdateSize(self.suitLabel,self.suitBg,Vector4(50,150,20,20))
	self.suitLine.transform.localPosition = Vector3(self.suitLine.transform.localPosition.x,self.suitBg.height *0.5)
end

function TipsEquipPanel:SetData (objs,bShowBaptize,bShowEh)
	log('TipsEquipPanel:SetData')
end	

function TipsEquipPanel:SetData1 (objs,bShowBaptize,bShowEh)

	self.bShowBaptize = bShowBaptize
	self.bShowEh = bShowEh
	-- self.objBtnRightTrigger.onPress = ""
	-- self.objBtnRightTrigger.onRelease = ""
	-- self.objBtnLefTrigger.onPress = ""
	-- self.objBtnLefTrigger.onRelease = ""
	self.effectLeft:SetActive(false)
	self.effectRight:SetActive(false)
	if(#objs <= 0) then return end	
	local isOutData = objs[1].isOutData 
	local item = isOutData and objs[1].equip.base or objs[1];
	local showBtn = objs[2]
	if showBtn then
		local tbl = objs[3]
		if tbl then
			self.objBtnLeft:SetActive(tbl[1])
			if tbl[1] then
				self.btnLeftLabel.text = tbl[2]
				if "装备" == tbl[2] and bShowEh then
					self.effectLeft:SetActive(true)
				end
				self.btnLeft.luaFunction = tbl[3]
			end	
		else
			self.objBtnLeft:SetActive(false)			
		end
		tbl = objs[4]
		if tbl then
			self.objBtnRight:SetActive(tbl[1])
			if tbl[1] then
				self.btnRightLabel.text = tbl[2]
				self.btnRight.luaFunction = tbl[3]


				if "洗练" == tbl[2] and bShowBaptize and not bShowEh then
					-- self.objBtnRightTrigger.onPress = "TipsEquipPanel:OnPressRight()"
					-- self.objBtnRightTrigger.onRelease = "TipsEquipPanel:OnReleaseRight()"
					-- CPanelTips.effectRight = self.effectRight
					
					self.effectRight:SetActive(true)
				end
			end	
		else
			self.objBtnRight:SetActive(false)
		end	
		tbl = objs[5]
		if tbl then
			self.objBtnCenter:SetActive(tbl[1])
			if tbl[1] then
				self.lblCenter.text = tbl[2]
				self.btnCenter.luaFunction = tbl[3]
			else
				self.objBtnCenter:SetActive(false)
			end	
		end	
		-- 配件栏物品名字
		self.nameLabel.text = (isOutData and item:GetFirstNameEx(objs[1].equip.strengthen) or item:GetFirstName())
	else
		--判断是否为装备配件
		if objs['IsHoly'] ~= nil and objs['IsHoly'] == true then
			self.nameLabel.text = item:GetFirstName()
		else
			-- 大于95000的装备才有觉醒
			if item:Gettype() <= 95000 then
				self.nameLabel.text = item:GetColorName()
			else
				local pos = item:GetPos()
				local quality = item:GetQuality()
				local wakenLv = isOutData and objs[1].equip.star or g_Hero:GetEquipWakenLv(item:GetPos())
				local awakeCfg = Template.GetTeamEquipAwakeTemplate(pos,quality,wakenLv)
				--local nextCfg = Template.GetTeamEquipAwakeTemplate(pos,quality,wakenLv+1)
				local isMax = awakeCfg ~= nil
				if g_Hero.showAwake then
					self.nameLabel.text = isMax and item:GetColor()..awakeCfg.name or item:GetColorName()
				else 
					self.nameLabel.text = isMax and item:GetColor()..(isOutData and item:GetFirstNameEx(objs[1].equip.strengthen) or item:GetFirstName()) or item:GetColorName()
				end 
			end
		end
	end

	--self.lvLabel.text = item:GetLevel()
	self.baseLabel.text =  isOutData and item:GetFirstDescEx(objs[1].equip, objs[1].myInfo) or item:GetFirstDesc() --item:GetEquipColor()..item:GetBaseAttrDesc()
	--logerror(item:Gettype())
	--logerror('c')
	if item:Gettype()>=95000 then
		self.TeamstarLabel.text= (isOutData and item:GetStarDescEx(objs[1].equip.star) or item:GetStarDesc())
	else
		self.starLabel.text = isOutData and item:GetStarDescEx(objs[1].equip.star) or item:GetStarDesc()
	end
	self.icon.MainTexture = isOutData and item:GetIconEx(objs[1].equip.star) or item:GetIcon();
	self.quality.spriteName = item:GetQualitySpriteName();	
	self.appendLabel.text = isOutData and item:GetAppendAttrDescEx(objs[1].equip.strengthen, objs[1].equip.star) or item:GetAppendAttrDesc()
	local show = true
	if objs['IsShowEquip'] ~= nil then
		show = objs['IsShowEquip']
	end
	self.objEquiped:SetActive(item:IsEquiped() and show)
	if item:GetSuitID() ~= 0 then
		self.objSuitPart:SetActive(true)
		self.suitLabel.text = item:GetSuitAttrDesc()
	else
		self.objSuitPart:SetActive(false)
	end
	if showBtn then
		self.objBtnPart:SetActive(showBtn)
	else
		self.objBtnPart:SetActive(false)
	end
end

function TipsEquipPanel:CreateBackground(bg)	
	local go = self.objBg
	
	go.gameObject:SetActive(true);

	go.transform:AttachTo(self.transform, true);
	
	local pos = go.transform.localPosition;
	pos.z = self.transform.localPosition.z + 1;
	go.transform.localPosition = pos;
	
	self.background = go:GetComponent('UISprite');
	self.background.width = bg.width;
	self.background.height = bg.height;
	
end

function TipsEquipPanel:OnPressLeft()
	
end

function TipsEquipPanel:OnReleaseLeft()
	
end

function TipsEquipPanel:OnPressRight()
	
end

function TipsEquipPanel:OnReleaseRight()
	
end

---------------------------------------------------
--接口部分
---------------------------------------------------
function GetTipsComponentTable(obj,wndname)
	local tbl
	if( wndname == "TipsItemMiniPanel") then
		tbl = TipsItemMiniPanel.new(obj)
	elseif ( wndname == "TipsSkillPanel") then
		tbl = TipsSkillPanel.new(obj)
	elseif ( wndname == "TipsCreatureSpellPanel") then
		tbl = TipsCreatureSpellPanel.new(obj)		
	elseif ( wndname == "TipsCommonPanel") then
		tbl = TipsCommonPanel.new(obj)		
	elseif ( wndname == "EquipTipsPanel") then
		tbl = TipsEquipPanel.new(obj)				
	end
	return tbl
end