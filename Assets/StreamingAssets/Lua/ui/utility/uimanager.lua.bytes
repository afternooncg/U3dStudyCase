
--界面管理器
require "ui.utility.ui"

local UpdateBeat = UpdateBeat

--------------------------
local ContainerDelayLoadLua =
{
	['ToolbarPanel'] = {isload=false,file='ui.toolbarpanel'},
	['LoginPanel'] = {isload=false,file='ui.loginpanel'},
	['RankingPanel'] = {isload=false,file='ui.rankingpanel'},
	['HeroModelPanel'] = {isload=false,file='ui.heromodelpanel'},
	['BagModelPanel'] = {isload=false,file='ui.bagmodelpanel'},
    ['TipsPanel'] = {isload=false,file='ui.tips.paneltips'},
    ['MainPanel'] = {isload=false,file='ui.mainpanel'},
    ['DemoPanel'] = {isload=false,file='ui.demopanel'},
	['BuildShopPanel'] = {isload=false,file='ui.buildshoppanel'},

	--开发用
	['GMPanel'] = {isload=false,file='ui.panelgm'},
}

CUIMgr={}
local function CheckLoadLua(strWnd)
	local luaInfo = ContainerDelayLoadLua[strWnd]
	if not luaInfo then return end
	if luaInfo.isload then return end
	CUIMgr[strWnd] = require (luaInfo.file)
	luaInfo.isload = true
end

function OpenWnd(monoObj)
	if not monoObj then
		logerror('OpenWnd failed!')
		return false
	end
	local strWnd = monoObj.name
	--logerror(strWnd.." Open Success!")
	CheckLoadLua(strWnd)
	local wnd = CUIMgr[strWnd]
	if not wnd then
		logerror('Wnd:[' .. strWnd .. ']load failed')
		return false
	end

	wnd.monoScript = monoObj
	wnd.name = strWnd
	wnd:OnOpen(monoObj)

	if wnd.Update then
		UpdateBeat:Add(wnd.Update, wnd)	
	end	
	--UpdateBeat:Dump()
	return true
end

function ReOpenWnd(monoObj)
	local strWnd = monoObj.name
	CheckLoadLua(strWnd)
	local wnd = CUIMgr[strWnd]
	if not wnd then	return end
	if wnd.ReOpen then
		wnd:ReOpen()
	end
end

function CloseWnd(monoObj)
	if IsNil(monoObj) then
		return false
	end

	local wnd = CUIMgr[monoObj.name]
	if not wnd then
		return false
	end
	if wnd.OnClose then
		wnd:OnClose(monoObj)
	end
	if wnd.Update then
		UpdateBeat:Remove(wnd.Update, wnd)
	end

	--UpdateBeat:Dump()
	--LuaGC()
	return true
end

function GetUIClass(strWnd)
	CheckLoadLua(strWnd)
	return CUIMgr[strWnd]
end

function OnClickClose(strWnd)
	local wnd = CUIMgr[strWnd]
	if not wnd then return false end
	--log('关闭界面:'..strWnd)
	if wnd.OnClickClose~=nil then
		wnd:OnClickClose()
	else
		if wnd.monoScript~=nil then 
			PanelLogic.OnClickClose(wnd.monoScript)
		end 
	end	
	return true
end

function RefreshWnd(strWnd)
	local wnd = CUIMgr[strWnd]
	if not wnd then return false end
	if IsNil(wnd.m_wnd) then	return false end	
	--log('刷新界面:'..strWnd)
	if wnd.OnRefresh then
		wnd:OnRefresh()
	end
	return true
end

function IsWndOpen(strWnd)
	if not CUIMgr[strWnd] then return false end
	if IsNil(CUIMgr[strWnd].m_wnd) then return false end
	return true
end

function RefreshWndByServerTime(time,nametbl,functbl)
	for _,v in ipairs(nametbl) do
		local subtbl = functbl[v]
		local wnd = CUIMgr[v]
		if subtbl then
			subtbl.func(wnd,subtbl.param,time)
		end
	end
end
